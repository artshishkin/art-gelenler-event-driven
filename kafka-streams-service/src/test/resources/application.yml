spring:
  application:
    name: "@project.artifactId@"
  cloud:
    config:
      enabled: false
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8181/realms/gelenler-tutorial

kafka-streams-service:
  custom-audience: ${spring.application.name}

server:
  servlet:
    context-path: /${spring.application.name}

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
security:
  paths-to-ignore: /api-docs

retry-config:
  initial-interval-ms: 1000
  max-interval-ms: 10000
  multiplier: 2.4
  max-attempts: 3
  sleep-time-ms: 2000

kafka-config:
  bootstrap-servers: localhost:19092,localhost:29092,localhost:39092
  schema-registry:
    key: schema.registry.url
    url: http://localhost:8081
  topic-name: twitter-topic
  topic-names-to-create:
    - twitter-topic
    - twitter-analytics-topic

kafka-streams-config:
  application-id: kafka-streams-application
  input-topic-name: twitter-topic
  output-topic-name: twitter-analytics-topic
  state-file-location: ${user.home}/kafka-streaming-state
  word-count-store-name: word-count-store



