elastic-query-service:
  version: v1
  custom-audience: elastic-query-service
  webclient:
    connect-timeout-ms: 10000
    read-timeout-ms: 10000
    write-timeout-ms: 10000
    max-in-memory-size: 10485760 #10MB
    content-type: 'application/vnd.api.v1+json'
    accept-type: 'application/vnd.api.v1+json'
    base-url: 'http://kafka-streams-service/kafka-streams-service'
    query-type: 'KAFKA_STATE_STORE'
  queries:
    get-word-count-by-word:
      method: GET
      uri: '/get-word-count-by-word/{word}'
      accept: ${elastic-query-service.webclient.accept-type}
app.oauth.baseUri: http://localhost:8181
spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${app.oauth.baseUri}/realms/gelenler-tutorial
      client:
        registration:
          keycloak:
            client-id: elastic-query-service
            client-secret: '{cipher}7561ff7c967124b30fac59dc89cf18b1c0bff8b1c43ceb6c7031b3c4ae58d068c351e753858487009d5f5169477141eb37548b65c59cca0005e2af3cc4d7bb62'
            authorization-grant-type: client_credentials
        provider:
          keycloak:
            issuer-uri: ${app.oauth.baseUri}/realms/gelenler-tutorial
  jpa:
    open-in-view: false
    show-sql: true
    database: POSTGRESQL
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQL95Dialect
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:25432/postgres?currentSchema=public&binaryTransfer=true&reWriteBatchedInserts=true
    username: keycloak
    password: '{cipher}1f1c2d807682cfed8604459dd74615a1e80713d53179ba7d3a1166eece8dd256'
  sql:
    init:
      schema-locations: classpath:init-schema.sql
      data-locations: classpath:init-data.sql
      mode: always

server:
  servlet:
    context-path: /elastic-query-service

elastic-query-config:
  text-field: text
  use-repository: true

elastic-config:
  index-name: twitter-index
  connection-url: http://localhost:9200
  connection-timeout-ms: 5000
  socket-timeout-ms: 30000

user-config:
  username: art
  password: '{cipher}f131e75d110494eb27823d8d6652f5a9d63bfa86e438d7f5dbe322b79493e79a'
  roles:
    - USER

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
security:
  paths-to-ignore: /api-docs