server:
  servlet:
    context-path: /elastic-query-web-client

app.redirect.host.uri: http://localhost:${server.port}
app.oauth.baseUri: http://localhost:8181
app.security:
  default-client-registration-id: keycloak
  logout-success-uri: http://localhost:${server.port}/elastic-query-web-client

spring:
  thymeleaf:
    cache: false
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: elastic-query-web-client-2
            client-secret: '{cipher}4ab6f455d4d49e5033bea854f3b5e822099509e72d655f3bca4266a9ef05f380a78a7a1461e6a270ffbb3fc14efdba4934737f6341523749fdcb01a59e991fa0'
            authorization-grant-type: authorization_code
            scope: openid,profile
            redirect-uri: '{baseUrl}/login/oauth2/code/{registrationId}'
        provider:
          keycloak:
            issuer-uri: ${app.oauth.baseUri}/realms/gelenler-tutorial

user-config:
  username: art
  password: '{cipher}f131e75d110494eb27823d8d6652f5a9d63bfa86e438d7f5dbe322b79493e79a'
  roles:
    - USER

elastic-query-web-client:
  webclient:
    connect-timeout-ms: 10000
    read-timeout-ms: 10000
    write-timeout-ms: 10000
    max-in-memory-size: 10485760 #10MB
    content-type: 'application/vnd.api.v1+json'
    accept-type: 'application/vnd.api.v1+json'
    base-url: 'http://elastic-query-service/elastic-query-service/documents'
    service-id: elastic-query-service
    instances:
      -
        id: elastic-query-service-1
        host: localhost
        port: 8093
      -
        id: elastic-query-service-2
        host: localhost
        port: 8095
  queries:
    query-by-text:
      method: POST
      uri: '/get-document-by-text'
      accept: ${elastic-query-web-client.webclient.accept-type}

---
spring:
  config:
    activate:
      on-profile: local
elastic-query-web-client:
  webclient:
    instances:
      - id: elastic-query-service-1
        host: localhost
        port: 8093

